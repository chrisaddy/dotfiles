#!/usr/bin/env nu
def open-files [files: list] {
  # TODO: handle other types of files/dirs
  ^$env.EDITOR ...($files | get name)
}

def delete-files [files: list] {
  print $files
  let confirm = (input $"(ansi yellow)confirm deletion?(ansi reset) [y/(ansi green)N(ansi reset)]: ")
  match ($confirm | str downcase) {
    "y" => {
      rm -f ...($files | get name)
      print $"(ansi red)deleted"
    }
    _ => {
      print $"(ansi yellow)cancelled"
    }
    
  }
}

let result = (
  ls **/*
  | where type == "file"
  | sk
      --multi
      --preview {
          # TODO: different colors depending on size and age?
          let size = $"[(ansi yellow)size(ansi reset)=($in.size)]"
          let modified = $"[(ansi cyan)modified(ansi reset)=($in.modified | date humanize)]"
          let body = ^bat --style=plain --color=always $in.name
          $"($size) ($modified)\n($body)"

      }
      --format { $in.name }
      --preview-window "right:60%"
      --bind { ctrl-d: accept enter: accept}
      --expect [ctrl-d enter]
)

match ($result | get --ignore-errors action) {
  "enter" => {
    open-files $result.selected
  }
  "ctrl-d" => {
    delete-files $result.selected
  }
  _ => {
    print $"(ansi yellow)no action selected"
  }
}
